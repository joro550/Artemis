@if (CalculateTotalPages() >= 1)
{
    <footer class="mt-auto py-3">
        <div class="container">
            <nav>
                <ul class="pagination justify-content-center">
                    <li class="page-item">
                        <a class="page-link" @onclick="@(async () => { await GoToPage(0); })">First</a>
                    </li>

                    <li class="page-item">
                        <a class="page-link" @onclick="@(async () => { await GoToPage(_currentPage - 1); })">Previous</a>
                    </li>

                    @{ var totalPages = CalculateTotalPages(); }
                    @for (var i = 0; i < CalculateTotalPages() + 1; i++)
                    {
                        var page = i;
                        var activeClass = _currentPage == i ? "active" : string.Empty;

                        <li class="page-item @activeClass">
                            <a class="page-link" @onclick="@(async () => { await GoToPage(page); })">@(i + 1)</a>
                        </li>
                    }

                    <li class="page-item"><a class="page-link" @onclick="@(async () => { await GoToPage(_currentPage + 1); })">Next</a></li>
                    <li class="page-item"><a class="page-link" @onclick="@(async () => { await GoToPage(CalculateTotalPages()); })">Last</a></li>
                </ul>
            </nav>
        </div>
    </footer>
}

@code {
    private int _currentPage = 0;

    [Parameter]
    public int ItemsPerPage { get; set; }

    [Parameter]
    public int TotalItems { get; set; }

    [Parameter]
    public Func<int, Task> OnItemClick { get; set; }

    private int CalculateTotalPages()
    {
        if (TotalItems <= ItemsPerPage)
            return 1;

        // 0 base index
        return TotalItems / ItemsPerPage;
    }

    private async Task GoToPage(int page)
    {
        var calculateTotalPages = CalculateTotalPages();

        if (page <= 0)
            page = 0;
        if (page >= calculateTotalPages)
            page = calculateTotalPages;

        await OnItemClick(page);

        _currentPage = page;
        StateHasChanged();
    }
}
