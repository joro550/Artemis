@page "/organization/{OrganizationId:int}/events/{eventId:int}"

@using Artemis.Web.Shared.Events
@using Artemis.Web.Shared.EventUpdates

@inject HttpClient Client

<EventJumbotron Event="_event" />

@if (_eventUpdates == null)
{
    <p><em>Loading...</em></p>
}
else if (!_eventUpdates.Any())
{
    <p><em>This event currently have no updates</em></p>
}
else
{
    foreach (var update in _eventUpdates)
    {
        <EventUpdateCard Model="update" />
    }
}

@code {
    [Parameter]
    public int OrganizationId { get; set; }

    [Parameter]
    public int EventId { get; set; }

    Event _event;
    EventUpdate[] _eventUpdates;

    protected override async Task OnInitializedAsync()
    {
        _event = await Client.GetJsonAsync<Event>($"/api/organization/{OrganizationId}/event/{EventId}");
        _eventUpdates = await Client.GetJsonAsync<EventUpdate[]>($"/api/organization/{OrganizationId}/event/{EventId}/update");
    }

}
